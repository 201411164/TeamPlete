<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.teamplete.dao.MemberDAO">

	<resultMap type="MemberVO" id="memberMap">
		<result column="reg_date" property="regDate" />
		<result column="file_path" property="filePath" />
	</resultMap>

	<resultMap type="ProfileVO" id="profileMap">
		<result column="p_memberid" property="pMemberid" />
		<result column="file_name_key" property="fileNameKey" />
		<result column="file_name" property="fileName" />
		<result column="file_path" property="filePath" />
		<result column="file_size" property="fileSize" />
		<result column="del_yn" property="delYN" />
		<result column="ins_date" property="insDate" />
	</resultMap>

	<!-- 회원정보 삽입 -->
	<insert id="insertMember" parameterType="MemberVO">
		insert into
		Member_tb(memberid, name, password, email, kakao, profile, profilebg)
		values(#{memberid}, #{name}, #{password}, #{email}, #{kakao}, #{profile}, #{profilebg})
	</insert>
	
	<!-- 특정 회원의 정보 조회(아이디로 이름 조회) -->
	<select id="selectMember" parameterType="String" resultMap="memberMap">
		select memberid, name, email, logincount, status, last_date, profile, profilebg
		from member_tb
		where memberid = #{memberid}
	</select>

	<!-- 아이디 중복체크 -->
	<select id="checkId" parameterType="String"
		resultType="int">
		select count(*)
		from member_tb
		where memberid = #{memberid}
	</select>

	<!-- 로그인 -->
	<select id="login" parameterType="MemberVO"
		resultMap="memberMap">
		select memberid, name, password, email, profile, logincount, status, last_date, profilebg
		from member_tb
		where memberid = #{memberid} and
		password = #{password}	
	</select>
	
	<update id="updateMember" parameterType="MemberVO">
      update member_tb
       set
    	logincount = #{logincount}, status = #{status}, last_date = SYSDATE
    	 where memberid = #{memberid}
   </update>
   
   <!-- 회원탈퇴 -->
   <delete id="deleteMember" parameterType="String">
      delete member_tb
        where memberid = #{memberid}
   </delete>
  
   <!-- 회원정보 수정 시 비밀번호 체크 -->
   <select id="checkPw" parameterType="hashmap" resultType="int">
		select count(*)
		 from member_tb
		  where memberid = #{memberid} and password = #{password}
   </select>

	<!-- 회원 정보 수정 -->
	<update id="modifyMemberInfo" parameterType="MemberVO">
		update member_tb
		 set
		  name = #{name}, password = #{password}, email = #{email}
		   where memberid = #{memberid}
	</update>
	
	<!-- 회원테이블의 profile 업데이트 -->
	<update id="updateProfile" parameterType="hashmap">
		update member_tb
		 set
		  profile = #{profile}
		   where memberid = #{memberid}
	</update>
	
	<!-- 프로필 변경 insert -->
	<insert id="insertProfile" parameterType="ProfileVO">
		insert into profile_tb(p_memberid, file_name_key, file_name, file_path, file_size, del_yn)
		 values(#{pMemberid}, #{fileNameKey}, #{fileName}, #{filePath}, #{fileSize}, #{delYN})
	</insert>
	
	<!-- 해당 아이디의 profile 이미지가 이미 업로드 되어있는지 확인 -->
	<select id="checkProfile" parameterType="String" resultType="int">
		select count(*)
		 from profile_tb
		  where p_memberid = #{pMemberid}
	</select>
	
	<!-- 프로필 변경(modify) update -->
	
	<!-- 프로필 변경 delete -->
	
   
</mapper>