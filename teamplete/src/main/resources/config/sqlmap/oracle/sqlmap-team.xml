<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.teamplete.dao.TeamDAO">

	<resultMap type="TeamVO" id="teamMap">
		<result column="team_id" property="teamId" />
		<result column="team_name" property="teamName" />
		<result column="owner_id" property="ownerId" />
		<result column="task_latest" property="taskLatest" />
		<result column="board_latest" property="boardLatest" />
	</resultMap>
	
	<resultMap type="MemberVO" id="teamMemberMap">
		<result column="reg_date" property="regDate" />
	</resultMap>

	<!-- 팀 생성 -->
	<insert id="insert" parameterType="TeamVO">
		insert into team_tb(team_id, team_name, owner_id, deadline, img)
		values(team_seq.nextval, #{teamName}, #{ownerId}, #{deadline}, #{img})
	</insert>

	
	<!-- 회원이 속한 팀 조회 -->
	<select id="selectAll" parameterType="String" resultMap="teamMap">
		select distinct T.team_id, T.team_name, T.owner_id, T.deadline, T.img, T.task_latest, T.board_latest
		 from team_tb T
		  left outer join team_member_tb M
		   on T.team_id = M.team_id
		    where T.owner_id = #{memberid} or M.member_id = #{memberid}
		     order by T.team_id desc
	</select>

	
	<!-- 특정 팀 조회 -->
	<select id="selectTeam" parameterType="int" resultMap="teamMap">
		select team_id, team_name, owner_id, deadline, task_latest, board_latest
		 from team_tb
		  where team_id = #{teamId}
	</select>
	
    <!-- 팀멤버 추가 -->
    <insert id="insertMember" parameterType="TeamMemberVO">
    	insert into team_member_tb(id, team_id, member_id)
    	 values(team_member_seq.nextval, #{teamId}, #{memberId})
    </insert>
    
    <!-- 팀 나가기 -->
    <delete id="outFromTeam" parameterType="hashmap">
    	delete team_member_tb
    	 where team_id = #{teamId} and member_id = #{memberId}
    </delete>
    
    <!-- 팀멤버 조회 -->
    <select id="selectTeamMember" parameterType="int" resultMap="teamMemberMap">
    	select distinct M.memberid, M.name, M.profile, M.email, M.status, M.logincount, M.last_date
    	 from member_tb M
    	  left outer join team_tb T
    	   on M.memberid = T.owner_id
    	    left outer join team_member_tb TM
    	     on M.memberid = TM.member_id
    	      where T.team_id = #{teamId} or TM.team_id = #{teamId}
    	       order by M.memberid asc
    </select>
    
    <!-- 모든 멤버 조회 -->
    <select id="selectAllMember" parameterType="int" resultMap="teamMemberMap">
    	select distinct M.memberid, M.name, M.profile, M.email, M.status, M.logincount, M.last_date
    	 from member_tb M 
    </select>

	<!-- 특정한 팀에 없는 멤버들만 조회 -->
	<select id="selectNotInTeamMemebers" parameterType="int" resultMap="teamMemberMap">
		select memberid, name
		from member_tb
		where memberid not in(select member_id from team_member_tb where team_id = #{teamId})
		and memberid not in(select owner_id from team_tb where team_id = #{teamId})
	</select>
    
    <!-- 팀 정보 업데이트 -->
    <update id="updateTeam" parameterType="TeamVO">
    	update team_tb
    	 set
    	  team_name = #{teamName},
    	  deadline = #{deadline}
    	   where team_id = #{teamId}
    </update>
    
    <!-- 팀 삭제 -->
    <delete id="deleteTeam" parameterType="int">
    	delete team_tb
    	 where team_id = #{teamId}
    </delete>
    
    
    <!-- 최근 업데이트 된 task의 등록시간 -->
    <update id="taskLatest" parameterType="int">
    	update team_tb
    	 set task_latest = (select max(task_date) from task_tb where team_id = #{teamId})
    	  where team_id = #{teamId}
    </update>
    
    <!-- 최근 업데이트 된 board의 등록시간 -->
    <update id="boardLatest" parameterType="int">
    	update team_tb
    	 set board_latest = (select max(board_date)
    	                    from board_tb
    	                     where task_id in(select task_id from task_tb where team_id = #{teamId}))
    	  where team_id = #{teamId}
    </update>
    
    <!-- 팀 검색 -->
    <select id="searchTeam" parameterType="String" resultMap="teamMap">
    	select team_id, team_name, owner_id, name
    	 from team_tb T
    	  left outer join member_tb M
    	   on T.owner_id = M.memberid
    	    where team_name like '%'||#{keyword}||'%'
    </select>
    

</mapper>